{
  "openapi": "3.0.3",
  "info": {
    "title": "Example OpenAPI Spec",
    "description": "Example OpenAPI Spec for Testing",
    "version": "1.0.0",
    "contact": {
      "name": "Evvan Erb"
    }
  },
  "servers": [
    {
      "url": "{baseUrl}/my-package/{version}",
      "variables": {
        "baseUrl": {
          "default": "http://localhost:8080"
        },
        "version": {
          "default": "v1"
        }
      }
    }
  ],
  "paths": {
    "/my-mappings": {
      "get": {
        "summary": "Get mappings",
        "description": "Gets all mappings",
        "operationId": "getMappings",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "issuer",
                      "claimName",
                      "claimValue"
                    ],
                    "properties": {
                      "userUUID": {
                        "description": "UUID for Mapping",
                        "type": "string",
                        "format": "uuid",
                        "example": "37f038e2-22ec-4e5b-93f4-f065bea65542"
                      },
                      "userName": {
                        "type": "string",
                        "example": "testUser"
                      },
                      "issuer": {
                        "type": "string",
                        "example": "http://myissuer.com:8080"
                      },
                      "claimName": {
                        "type": "string",
                        "example": "subject"
                      },
                      "claimValue": {
                        "type": "string",
                        "example": "xyz"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "mappings"
        ]
      },
      "post": {
        "tags": [
          "mappings"
        ],
        "summary": "Create a mapping",
        "description": "Create a mapping",
        "operationId": "createMapping",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "issuer",
                  "claimName",
                  "claimValue"
                ],
                "properties": {
                  "userUUID": {
                    "description": "UUID for Mapping",
                    "type": "string",
                    "format": "uuid",
                    "example": "37f038e2-22ec-4e5b-93f4-f065bea65542"
                  },
                  "userName": {
                    "type": "string",
                    "example": "testUser"
                  },
                  "issuer": {
                    "type": "string",
                    "example": "http://myissuer.com:8080"
                  },
                  "claimName": {
                    "type": "string",
                    "example": "subject"
                  },
                  "claimValue": {
                    "type": "string",
                    "example": "xyz"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "mappings"
        ],
        "summary": "Delete a mapping",
        "description": "Delete a mapping",
        "operationId": "deleteMapping",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "issuer",
                  "claimName",
                  "claimValue"
                ],
                "properties": {
                  "userUUID": {
                    "description": "UUID for Mapping",
                    "type": "string",
                    "format": "uuid",
                    "example": "37f038e2-22ec-4e5b-93f4-f065bea65542"
                  },
                  "userName": {
                    "type": "string",
                    "example": "testUser"
                  },
                  "issuer": {
                    "type": "string",
                    "example": "http://myissuer.com:8080"
                  },
                  "claimName": {
                    "type": "string",
                    "example": "subject"
                  },
                  "claimValue": {
                    "type": "string",
                    "example": "xyz"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deleted"
          }
        }
      }
    },
    "/my-objects": {
      "get": {
        "summary": "Get all objects",
        "description": "Gets all objects",
        "operationId": "getObjects",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "valueOne"
                    ],
                    "properties": {
                      "valueOne": {
                        "description": "Value One",
                        "type": "string",
                        "example": "myValue"
                      },
                      "valueTwo": {
                        "type": "number",
                        "example": 1.2
                      },
                      "valueThree": {
                        "type": "integer",
                        "example": 3
                      },
                      "valueFour": {
                        "type": "boolean",
                        "example": true
                      },
                      "valueFive": {
                        "type": "object",
                        "properties": {
                          "subValueOne": {
                            "description": "Value One",
                            "type": "string",
                            "example": "myValue"
                          },
                          "subValueTwo": {
                            "type": "integer",
                            "example": 2
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "objects"
        ]
      },
      "post": {
        "tags": [
          "objects"
        ],
        "summary": "Create an object",
        "description": "Create an object",
        "operationId": "createObject",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "valueOne"
                ],
                "properties": {
                  "valueOne": {
                    "description": "Value One",
                    "type": "string",
                    "example": "myValue"
                  },
                  "valueTwo": {
                    "type": "number",
                    "example": 1.2
                  },
                  "valueThree": {
                    "type": "integer",
                    "example": 3
                  },
                  "valueFour": {
                    "type": "boolean",
                    "example": true
                  },
                  "valueFive": {
                    "type": "object",
                    "properties": {
                      "subValueOne": {
                        "description": "Value One",
                        "type": "string",
                        "example": "myValue"
                      },
                      "subValueTwo": {
                        "type": "integer",
                        "example": 2
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "objects"
        ],
        "summary": "Delete an object",
        "description": "Delete an object",
        "operationId": "deleteObject",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "valueOne"
                ],
                "properties": {
                  "valueOne": {
                    "description": "Value One",
                    "type": "string",
                    "example": "myValue"
                  },
                  "valueTwo": {
                    "type": "number",
                    "example": 1.2
                  },
                  "valueThree": {
                    "type": "integer",
                    "example": 3
                  },
                  "valueFour": {
                    "type": "boolean",
                    "example": true
                  },
                  "valueFive": {
                    "type": "object",
                    "properties": {
                      "subValueOne": {
                        "description": "Value One",
                        "type": "string",
                        "example": "myValue"
                      },
                      "subValueTwo": {
                        "type": "integer",
                        "example": 2
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deleted"
          }
        }
      }
    },
    "/important-things": {
      "get": {
        "summary": "Get important things",
        "description": "Gets all important things",
        "operationId": "getImportantThings",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "myString"
                }
              }
            }
          }
        },
        "tags": [
          "importantThings"
        ]
      },
      "post": {
        "summary": "Create an important thing",
        "description": "Create important thing",
        "operationId": "createImportantThing",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "number",
                "example": 1.2
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "required": true
                    },
                    "myObject": {
                      "type": "object",
                      "required": [
                        "issuer",
                        "claimName",
                        "claimValue"
                      ],
                      "properties": {
                        "userUUID": {
                          "description": "UUID for Mapping",
                          "type": "string",
                          "format": "uuid",
                          "example": "37f038e2-22ec-4e5b-93f4-f065bea65542"
                        },
                        "userName": {
                          "type": "string",
                          "example": "testUser"
                        },
                        "issuer": {
                          "type": "string",
                          "example": "http://myissuer.com:8080"
                        },
                        "claimName": {
                          "type": "string",
                          "example": "subject"
                        },
                        "claimValue": {
                          "type": "string",
                          "example": "xyz"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "importantThings"
        ]
      },
      "delete": {
        "tags": [
          "importantThings"
        ],
        "summary": "Delete an important thing",
        "description": "Delete an important thing",
        "operationId": "deleteImportantThing",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "number",
                "example": 1.2
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "required": true
                    },
                    "myObject": {
                      "type": "object",
                      "required": [
                        "issuer",
                        "claimName",
                        "claimValue"
                      ],
                      "properties": {
                        "userUUID": {
                          "description": "UUID for Mapping",
                          "type": "string",
                          "format": "uuid",
                          "example": "37f038e2-22ec-4e5b-93f4-f065bea65542"
                        },
                        "userName": {
                          "type": "string",
                          "example": "testUser"
                        },
                        "issuer": {
                          "type": "string",
                          "example": "http://myissuer.com:8080"
                        },
                        "claimName": {
                          "type": "string",
                          "example": "subject"
                        },
                        "claimValue": {
                          "type": "string",
                          "example": "xyz"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Object": {
        "type": "object",
        "required": [
          "valueOne"
        ],
        "properties": {
          "valueOne": {
            "description": "Value One",
            "type": "string",
            "example": "myValue"
          },
          "valueTwo": {
            "type": "number",
            "example": 1.2
          },
          "valueThree": {
            "type": "integer",
            "example": 3
          },
          "valueFour": {
            "type": "boolean",
            "example": true
          },
          "valueFive": {
            "type": "object",
            "properties": {
              "subValueOne": {
                "description": "Value One",
                "type": "string",
                "example": "myValue"
              },
              "subValueTwo": {
                "type": "integer",
                "example": 2
              }
            }
          }
        }
      }
    }
  }
}